# This environment file will store all necessary information to
# be able run the web instance. Note that this file may contain
# the secret key for Django and locations for SSL certificates.
#
# If you're running PostgreSQL, make sure to include necessary
# environment variables to access the database.

# For more information about environment variables with docker, visit
# https://docs.docker.com/compose/environment-variables/env-file/

# -- Django-Configuration ----------------------------------------------------
# Control whether the web instance should be running in debug mode to provide
# detailed exception description.
DJANGO_DEBUG=1

# Specify your django secret key here.
DJANGO_SECRET_KEY="django-insecure-vgh0!k)t1(4$5gb+f*g#$&lqwx6k%dp+d!x8v%jh1ct9%y=q+a"

# Make sure to edit the allowed host variable to specify which host should be
# able to connect to your web instance. Sperate them with : to add multiple
# hosts.
DJANGO_ALLOWED_HOSTS=*

# IMPORTANT: Configure the trusted hosts if you are using a reverse proxy
# like nginx. Replace hostnames of the given URLs to match your own ones.
DJANGO_CSRF_TRUSTED_ORIGINS=https://localhost:8443|https://127.0.0.1:8443

# Use this configuration to control whether django should remove active sessions
# when the browser is closed.
DJANGO_SESSION_EXPIRE_AT_BROWSER_CLOSE=1

# Control the TTL of a session cookie default will be 3600s = 1h
DJANGO_SESSION_COOKIE_AGE=3600

# Control whether you want to start your instance with HTTPS
DJANGO_HTTPS=True

# The storage URL where all project data should be saved separately. Note the
# trailing ``/`` that is needed by Django. Remove this connfiguration if you work locally.
DJANGO_STORAGE_URL="/app_storage/"

# Same as described in DJANGO_STORAGE_URL without traling slash.
DJANGO_STORAGE_ROOT="/app_storage"

# The port django should be served on.
DJANGO_PORT=8000

# -- Database-Configuration --------------------------------------------------
# Configure database connection variables. Note that you can remove the
# following lines to use a local SQLite database.
DB_ENGINE=django.db.backends.postgresql
DB_DATABASE=sastf_backend_db
DB_USER=sastf_django
DB_PASSWORD=supersecretpassword

POSTGRES_USER=${DB_USER}
POSTGRES_PASSWORD=${DB_PASSWORD}
POSTGRES_DB=${DB_DATABASE}

# Important configuration that is used to connect to the database. Insert
# your database backend hostname here.
DB_HOST=backend-db
DB_PORT=5432

# -- Celery-Configuration ----------------------------------------------------
# TODO: SSL config for Redis
CELERY_BROKER_URL="redis://redis:6379/0"
CELERY_RESULT_BACKEND="redis://redis:6379/0"
CELERY_DEBUG_LEVEL=DEBUG

# -- MASTF-Configuration ----------------------------------------------------
SASTF_API_ONLY=0

# -- YARA-Configuration ----------------------------------------------------
YARA_BASE_DIR="/yss"
YARA_RULES_DIR="/app/yara/rules"

YSS_LOGGING_CONFIG="/app/yara/logging.ini"

# -- Nginx-Configuration ----------------------------------------------------
NGINX_HTTP_PORT=8080
NGINX_HTTPS_PORT=8443

# -- Tools-Configuration ----------------------------------------------------
APKTOOL_VERSION="2.5.0"
DEX2JAR_VERSION="1.2"

LIBSCOUT_PROFILES_DIR="/app/profiles"
LIBSCOUT_ANDROID_JAR="/app/plugins/android.jar"

# -- Swift-Configuration ----------------------------------------------------
SWIFTSRV_HOST="0.0.0.0"
SWIFTSRV_PORT=1289
